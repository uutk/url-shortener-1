// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package service

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FullURLObject struct {
	Url                  string   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Hash                 string   `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	Visited              int32    `protobuf:"varint,3,opt,name=visited,proto3" json:"visited,omitempty"`
	UserId               string   `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FullURLObject) Reset()         { *m = FullURLObject{} }
func (m *FullURLObject) String() string { return proto.CompactTextString(m) }
func (*FullURLObject) ProtoMessage()    {}
func (*FullURLObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{0}
}

func (m *FullURLObject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FullURLObject.Unmarshal(m, b)
}
func (m *FullURLObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FullURLObject.Marshal(b, m, deterministic)
}
func (m *FullURLObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FullURLObject.Merge(m, src)
}
func (m *FullURLObject) XXX_Size() int {
	return xxx_messageInfo_FullURLObject.Size(m)
}
func (m *FullURLObject) XXX_DiscardUnknown() {
	xxx_messageInfo_FullURLObject.DiscardUnknown(m)
}

var xxx_messageInfo_FullURLObject proto.InternalMessageInfo

func (m *FullURLObject) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *FullURLObject) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *FullURLObject) GetVisited() int32 {
	if m != nil {
		return m.Visited
	}
	return 0
}

func (m *FullURLObject) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type URLRequest struct {
	Url                  string   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	UserId               string   `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *URLRequest) Reset()         { *m = URLRequest{} }
func (m *URLRequest) String() string { return proto.CompactTextString(m) }
func (*URLRequest) ProtoMessage()    {}
func (*URLRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{1}
}

func (m *URLRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_URLRequest.Unmarshal(m, b)
}
func (m *URLRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_URLRequest.Marshal(b, m, deterministic)
}
func (m *URLRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_URLRequest.Merge(m, src)
}
func (m *URLRequest) XXX_Size() int {
	return xxx_messageInfo_URLRequest.Size(m)
}
func (m *URLRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_URLRequest.DiscardUnknown(m)
}

var xxx_messageInfo_URLRequest proto.InternalMessageInfo

func (m *URLRequest) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *URLRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type HashedURLReply struct {
	Url                  string   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HashedURLReply) Reset()         { *m = HashedURLReply{} }
func (m *HashedURLReply) String() string { return proto.CompactTextString(m) }
func (*HashedURLReply) ProtoMessage()    {}
func (*HashedURLReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{2}
}

func (m *HashedURLReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HashedURLReply.Unmarshal(m, b)
}
func (m *HashedURLReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HashedURLReply.Marshal(b, m, deterministic)
}
func (m *HashedURLReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HashedURLReply.Merge(m, src)
}
func (m *HashedURLReply) XXX_Size() int {
	return xxx_messageInfo_HashedURLReply.Size(m)
}
func (m *HashedURLReply) XXX_DiscardUnknown() {
	xxx_messageInfo_HashedURLReply.DiscardUnknown(m)
}

var xxx_messageInfo_HashedURLReply proto.InternalMessageInfo

func (m *HashedURLReply) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type UserIdRequest struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserIdRequest) Reset()         { *m = UserIdRequest{} }
func (m *UserIdRequest) String() string { return proto.CompactTextString(m) }
func (*UserIdRequest) ProtoMessage()    {}
func (*UserIdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{3}
}

func (m *UserIdRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserIdRequest.Unmarshal(m, b)
}
func (m *UserIdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserIdRequest.Marshal(b, m, deterministic)
}
func (m *UserIdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserIdRequest.Merge(m, src)
}
func (m *UserIdRequest) XXX_Size() int {
	return xxx_messageInfo_UserIdRequest.Size(m)
}
func (m *UserIdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserIdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserIdRequest proto.InternalMessageInfo

func (m *UserIdRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type ArrayURLsReply struct {
	Urls                 []*FullURLObject `protobuf:"bytes,1,rep,name=urls,proto3" json:"urls,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ArrayURLsReply) Reset()         { *m = ArrayURLsReply{} }
func (m *ArrayURLsReply) String() string { return proto.CompactTextString(m) }
func (*ArrayURLsReply) ProtoMessage()    {}
func (*ArrayURLsReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{4}
}

func (m *ArrayURLsReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArrayURLsReply.Unmarshal(m, b)
}
func (m *ArrayURLsReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArrayURLsReply.Marshal(b, m, deterministic)
}
func (m *ArrayURLsReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArrayURLsReply.Merge(m, src)
}
func (m *ArrayURLsReply) XXX_Size() int {
	return xxx_messageInfo_ArrayURLsReply.Size(m)
}
func (m *ArrayURLsReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ArrayURLsReply.DiscardUnknown(m)
}

var xxx_messageInfo_ArrayURLsReply proto.InternalMessageInfo

func (m *ArrayURLsReply) GetUrls() []*FullURLObject {
	if m != nil {
		return m.Urls
	}
	return nil
}

type HashedUrlRequest struct {
	Hash                 string   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	UserId               string   `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HashedUrlRequest) Reset()         { *m = HashedUrlRequest{} }
func (m *HashedUrlRequest) String() string { return proto.CompactTextString(m) }
func (*HashedUrlRequest) ProtoMessage()    {}
func (*HashedUrlRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{5}
}

func (m *HashedUrlRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HashedUrlRequest.Unmarshal(m, b)
}
func (m *HashedUrlRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HashedUrlRequest.Marshal(b, m, deterministic)
}
func (m *HashedUrlRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HashedUrlRequest.Merge(m, src)
}
func (m *HashedUrlRequest) XXX_Size() int {
	return xxx_messageInfo_HashedUrlRequest.Size(m)
}
func (m *HashedUrlRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HashedUrlRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HashedUrlRequest proto.InternalMessageInfo

func (m *HashedUrlRequest) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *HashedUrlRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type URLReply struct {
	Url                  string   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Visited              int32    `protobuf:"varint,2,opt,name=visited,proto3" json:"visited,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *URLReply) Reset()         { *m = URLReply{} }
func (m *URLReply) String() string { return proto.CompactTextString(m) }
func (*URLReply) ProtoMessage()    {}
func (*URLReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{6}
}

func (m *URLReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_URLReply.Unmarshal(m, b)
}
func (m *URLReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_URLReply.Marshal(b, m, deterministic)
}
func (m *URLReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_URLReply.Merge(m, src)
}
func (m *URLReply) XXX_Size() int {
	return xxx_messageInfo_URLReply.Size(m)
}
func (m *URLReply) XXX_DiscardUnknown() {
	xxx_messageInfo_URLReply.DiscardUnknown(m)
}

var xxx_messageInfo_URLReply proto.InternalMessageInfo

func (m *URLReply) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *URLReply) GetVisited() int32 {
	if m != nil {
		return m.Visited
	}
	return 0
}

type CustomDomainRequest struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CustomDomain         string   `protobuf:"bytes,2,opt,name=custom_domain,json=customDomain,proto3" json:"custom_domain,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CustomDomainRequest) Reset()         { *m = CustomDomainRequest{} }
func (m *CustomDomainRequest) String() string { return proto.CompactTextString(m) }
func (*CustomDomainRequest) ProtoMessage()    {}
func (*CustomDomainRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{7}
}

func (m *CustomDomainRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CustomDomainRequest.Unmarshal(m, b)
}
func (m *CustomDomainRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CustomDomainRequest.Marshal(b, m, deterministic)
}
func (m *CustomDomainRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CustomDomainRequest.Merge(m, src)
}
func (m *CustomDomainRequest) XXX_Size() int {
	return xxx_messageInfo_CustomDomainRequest.Size(m)
}
func (m *CustomDomainRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CustomDomainRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CustomDomainRequest proto.InternalMessageInfo

func (m *CustomDomainRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *CustomDomainRequest) GetCustomDomain() string {
	if m != nil {
		return m.CustomDomain
	}
	return ""
}

type UpdateTokensRequest struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Amount               string   `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateTokensRequest) Reset()         { *m = UpdateTokensRequest{} }
func (m *UpdateTokensRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateTokensRequest) ProtoMessage()    {}
func (*UpdateTokensRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{8}
}

func (m *UpdateTokensRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateTokensRequest.Unmarshal(m, b)
}
func (m *UpdateTokensRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateTokensRequest.Marshal(b, m, deterministic)
}
func (m *UpdateTokensRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateTokensRequest.Merge(m, src)
}
func (m *UpdateTokensRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateTokensRequest.Size(m)
}
func (m *UpdateTokensRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateTokensRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateTokensRequest proto.InternalMessageInfo

func (m *UpdateTokensRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *UpdateTokensRequest) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

type UserObjectReply struct {
	Tokens               int32    `protobuf:"varint,1,opt,name=tokens,proto3" json:"tokens,omitempty"`
	CustomDomain         string   `protobuf:"bytes,2,opt,name=custom_domain,json=customDomain,proto3" json:"custom_domain,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserObjectReply) Reset()         { *m = UserObjectReply{} }
func (m *UserObjectReply) String() string { return proto.CompactTextString(m) }
func (*UserObjectReply) ProtoMessage()    {}
func (*UserObjectReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{9}
}

func (m *UserObjectReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserObjectReply.Unmarshal(m, b)
}
func (m *UserObjectReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserObjectReply.Marshal(b, m, deterministic)
}
func (m *UserObjectReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserObjectReply.Merge(m, src)
}
func (m *UserObjectReply) XXX_Size() int {
	return xxx_messageInfo_UserObjectReply.Size(m)
}
func (m *UserObjectReply) XXX_DiscardUnknown() {
	xxx_messageInfo_UserObjectReply.DiscardUnknown(m)
}

var xxx_messageInfo_UserObjectReply proto.InternalMessageInfo

func (m *UserObjectReply) GetTokens() int32 {
	if m != nil {
		return m.Tokens
	}
	return 0
}

func (m *UserObjectReply) GetCustomDomain() string {
	if m != nil {
		return m.CustomDomain
	}
	return ""
}

func init() {
	proto.RegisterType((*FullURLObject)(nil), "FullURLObject")
	proto.RegisterType((*URLRequest)(nil), "URLRequest")
	proto.RegisterType((*HashedURLReply)(nil), "HashedURLReply")
	proto.RegisterType((*UserIdRequest)(nil), "UserIdRequest")
	proto.RegisterType((*ArrayURLsReply)(nil), "ArrayURLsReply")
	proto.RegisterType((*HashedUrlRequest)(nil), "HashedUrlRequest")
	proto.RegisterType((*URLReply)(nil), "URLReply")
	proto.RegisterType((*CustomDomainRequest)(nil), "CustomDomainRequest")
	proto.RegisterType((*UpdateTokensRequest)(nil), "UpdateTokensRequest")
	proto.RegisterType((*UserObjectReply)(nil), "UserObjectReply")
}

func init() { proto.RegisterFile("service.proto", fileDescriptor_a0b84a42fa06f626) }

var fileDescriptor_a0b84a42fa06f626 = []byte{
	// 438 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0x41, 0x6f, 0xd3, 0x30,
	0x14, 0x6e, 0xd2, 0x2e, 0x25, 0xaf, 0x24, 0x29, 0xde, 0x34, 0xa2, 0x9e, 0x2a, 0x73, 0x09, 0x17,
	0x4b, 0x0c, 0x04, 0x07, 0x0e, 0x68, 0x02, 0x6d, 0x20, 0x15, 0x90, 0x5c, 0x72, 0x9e, 0xb2, 0xc4,
	0x28, 0x01, 0x37, 0x2e, 0xb6, 0x33, 0xa9, 0x3f, 0x8e, 0xff, 0x86, 0xe2, 0x26, 0x22, 0xd9, 0x52,
	0xca, 0xcd, 0x5f, 0xf2, 0xbe, 0xcf, 0xef, 0x7d, 0xdf, 0x33, 0x78, 0x8a, 0xc9, 0xbb, 0x22, 0x65,
	0x64, 0x2b, 0x85, 0x16, 0x38, 0x07, 0xef, 0xaa, 0xe2, 0x3c, 0xa6, 0xab, 0xaf, 0xb7, 0x3f, 0x58,
	0xaa, 0xd1, 0x1c, 0xc6, 0x95, 0xe4, 0xa1, 0xb5, 0xb4, 0x22, 0x97, 0xd6, 0x47, 0x84, 0x60, 0x92,
	0x27, 0x2a, 0x0f, 0x6d, 0xf3, 0xc9, 0x9c, 0x51, 0x08, 0xd3, 0xbb, 0x42, 0x15, 0x9a, 0x65, 0xe1,
	0x78, 0x69, 0x45, 0x27, 0xb4, 0x85, 0xe8, 0x29, 0x4c, 0x2b, 0xc5, 0xe4, 0x4d, 0x91, 0x85, 0x13,
	0x43, 0x70, 0x6a, 0xf8, 0x29, 0xc3, 0x6f, 0x00, 0x62, 0xba, 0xa2, 0xec, 0x57, 0xc5, 0xd4, 0xd0,
	0x35, 0x1d, 0xa2, 0xdd, 0x23, 0x62, 0xf0, 0x3f, 0x26, 0x2a, 0x67, 0x99, 0xa1, 0x6f, 0xf9, 0xee,
	0x21, 0x19, 0x47, 0xe0, 0xc5, 0xa6, 0xba, 0xd5, 0xef, 0xa8, 0x59, 0x3d, 0xb5, 0x57, 0xe0, 0x5f,
	0x4a, 0x99, 0xec, 0x62, 0xba, 0x52, 0x7b, 0x35, 0x0c, 0x93, 0x4a, 0x72, 0x15, 0x5a, 0xcb, 0x71,
	0x34, 0xbb, 0xf0, 0x49, 0xcf, 0x0f, 0x6a, 0xfe, 0xe1, 0x77, 0x30, 0x6f, 0x7a, 0x90, 0xbc, 0xbd,
	0xa2, 0xf5, 0xc5, 0xea, 0xf8, 0x72, 0x70, 0x88, 0xd7, 0xf0, 0xe8, 0x70, 0xfb, 0x5d, 0x3b, 0xed,
	0x9e, 0x9d, 0x78, 0x0d, 0xa7, 0xef, 0x2b, 0xa5, 0xc5, 0xe6, 0x83, 0xd8, 0x24, 0x45, 0x79, 0x6c,
	0x3c, 0xf4, 0x0c, 0xbc, 0xd4, 0xd4, 0xdf, 0x64, 0x86, 0xd0, 0xb4, 0xf1, 0x38, 0xed, 0x88, 0xe0,
	0x2b, 0x38, 0x8d, 0xb7, 0x59, 0xa2, 0xd9, 0x37, 0xf1, 0x93, 0x95, 0xea, 0xa8, 0xe8, 0x39, 0x38,
	0xc9, 0x46, 0x54, 0xa5, 0x6e, 0x87, 0xda, 0x23, 0xfc, 0x05, 0x82, 0xda, 0xf5, 0xc6, 0x29, 0x33,
	0xdb, 0x39, 0x38, 0xda, 0x88, 0x1a, 0x89, 0x13, 0xda, 0xa0, 0xff, 0xea, 0xeb, 0xe2, 0xb7, 0x0d,
	0xee, 0x3a, 0x17, 0x52, 0xb3, 0x92, 0x49, 0xf4, 0x1c, 0xa6, 0x0d, 0x40, 0x33, 0xf2, 0x77, 0x75,
	0x16, 0x01, 0xe9, 0xaf, 0x03, 0x1e, 0xa1, 0x08, 0x9c, 0x6b, 0xa6, 0x63, 0xc9, 0xd1, 0x13, 0x72,
	0x3f, 0xa7, 0x85, 0x4b, 0x3a, 0x95, 0x04, 0xdc, 0x6b, 0xa6, 0x3f, 0xef, 0x62, 0xc9, 0x15, 0xf2,
	0x49, 0x6f, 0x69, 0x16, 0x01, 0xe9, 0xaf, 0x06, 0x1e, 0xa1, 0x17, 0x30, 0xab, 0x95, 0xeb, 0xb2,
	0xf2, 0xbb, 0x78, 0xc0, 0x98, 0x93, 0x7b, 0x06, 0xe0, 0x11, 0x7a, 0x0b, 0xc1, 0x9a, 0xe9, 0x6e,
	0x6a, 0xe8, 0x8c, 0x0c, 0x84, 0xf8, 0x0f, 0xf2, 0x3e, 0x97, 0x4b, 0xe3, 0x32, 0x3a, 0x23, 0x03,
	0x61, 0x0d, 0x91, 0x6f, 0x1d, 0xf3, 0xa6, 0x5f, 0xfe, 0x09, 0x00, 0x00, 0xff, 0xff, 0xde, 0xcc,
	0x6d, 0xac, 0xe4, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ShortenerClient is the client API for Shortener service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ShortenerClient interface {
	Shorten(ctx context.Context, in *URLRequest, opts ...grpc.CallOption) (*HashedURLReply, error)
	GetUrl(ctx context.Context, in *HashedUrlRequest, opts ...grpc.CallOption) (*URLReply, error)
	GetMyUrls(ctx context.Context, in *UserIdRequest, opts ...grpc.CallOption) (*ArrayURLsReply, error)
	GetUserInfo(ctx context.Context, in *UserIdRequest, opts ...grpc.CallOption) (*UserObjectReply, error)
	SetCustomDomain(ctx context.Context, in *CustomDomainRequest, opts ...grpc.CallOption) (*UserObjectReply, error)
	SetTokensAmount(ctx context.Context, in *UpdateTokensRequest, opts ...grpc.CallOption) (*UserObjectReply, error)
}

type shortenerClient struct {
	cc *grpc.ClientConn
}

func NewShortenerClient(cc *grpc.ClientConn) ShortenerClient {
	return &shortenerClient{cc}
}

func (c *shortenerClient) Shorten(ctx context.Context, in *URLRequest, opts ...grpc.CallOption) (*HashedURLReply, error) {
	out := new(HashedURLReply)
	err := c.cc.Invoke(ctx, "/Shortener/Shorten", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shortenerClient) GetUrl(ctx context.Context, in *HashedUrlRequest, opts ...grpc.CallOption) (*URLReply, error) {
	out := new(URLReply)
	err := c.cc.Invoke(ctx, "/Shortener/GetUrl", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shortenerClient) GetMyUrls(ctx context.Context, in *UserIdRequest, opts ...grpc.CallOption) (*ArrayURLsReply, error) {
	out := new(ArrayURLsReply)
	err := c.cc.Invoke(ctx, "/Shortener/GetMyUrls", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shortenerClient) GetUserInfo(ctx context.Context, in *UserIdRequest, opts ...grpc.CallOption) (*UserObjectReply, error) {
	out := new(UserObjectReply)
	err := c.cc.Invoke(ctx, "/Shortener/GetUserInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shortenerClient) SetCustomDomain(ctx context.Context, in *CustomDomainRequest, opts ...grpc.CallOption) (*UserObjectReply, error) {
	out := new(UserObjectReply)
	err := c.cc.Invoke(ctx, "/Shortener/SetCustomDomain", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shortenerClient) SetTokensAmount(ctx context.Context, in *UpdateTokensRequest, opts ...grpc.CallOption) (*UserObjectReply, error) {
	out := new(UserObjectReply)
	err := c.cc.Invoke(ctx, "/Shortener/SetTokensAmount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ShortenerServer is the server API for Shortener service.
type ShortenerServer interface {
	Shorten(context.Context, *URLRequest) (*HashedURLReply, error)
	GetUrl(context.Context, *HashedUrlRequest) (*URLReply, error)
	GetMyUrls(context.Context, *UserIdRequest) (*ArrayURLsReply, error)
	GetUserInfo(context.Context, *UserIdRequest) (*UserObjectReply, error)
	SetCustomDomain(context.Context, *CustomDomainRequest) (*UserObjectReply, error)
	SetTokensAmount(context.Context, *UpdateTokensRequest) (*UserObjectReply, error)
}

func RegisterShortenerServer(s *grpc.Server, srv ShortenerServer) {
	s.RegisterService(&_Shortener_serviceDesc, srv)
}

func _Shortener_Shorten_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(URLRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShortenerServer).Shorten(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Shortener/Shorten",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShortenerServer).Shorten(ctx, req.(*URLRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Shortener_GetUrl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HashedUrlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShortenerServer).GetUrl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Shortener/GetUrl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShortenerServer).GetUrl(ctx, req.(*HashedUrlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Shortener_GetMyUrls_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShortenerServer).GetMyUrls(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Shortener/GetMyUrls",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShortenerServer).GetMyUrls(ctx, req.(*UserIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Shortener_GetUserInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShortenerServer).GetUserInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Shortener/GetUserInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShortenerServer).GetUserInfo(ctx, req.(*UserIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Shortener_SetCustomDomain_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CustomDomainRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShortenerServer).SetCustomDomain(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Shortener/SetCustomDomain",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShortenerServer).SetCustomDomain(ctx, req.(*CustomDomainRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Shortener_SetTokensAmount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateTokensRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShortenerServer).SetTokensAmount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Shortener/SetTokensAmount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShortenerServer).SetTokensAmount(ctx, req.(*UpdateTokensRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Shortener_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Shortener",
	HandlerType: (*ShortenerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Shorten",
			Handler:    _Shortener_Shorten_Handler,
		},
		{
			MethodName: "GetUrl",
			Handler:    _Shortener_GetUrl_Handler,
		},
		{
			MethodName: "GetMyUrls",
			Handler:    _Shortener_GetMyUrls_Handler,
		},
		{
			MethodName: "GetUserInfo",
			Handler:    _Shortener_GetUserInfo_Handler,
		},
		{
			MethodName: "SetCustomDomain",
			Handler:    _Shortener_SetCustomDomain_Handler,
		},
		{
			MethodName: "SetTokensAmount",
			Handler:    _Shortener_SetTokensAmount_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}
